# version: "3.8" # Phiên bản Docker Compose - Đã được loại bỏ vì obsolete

services:
   # Dịch vụ PostgreSQL cho User, Product, Order, Payment, Shipping, Notification, Inventory, Review Services
   core_db:
      image: postgres:16-alpine # Sử dụng image PostgreSQL phiên bản 16 (phiên bản alpine nhỏ gọn)
      container_name: ecommerce_core_db_container # Tên container
      environment: # Các biến môi trường để cấu hình PostgreSQL
         POSTGRES_DB: ecommerce_core_db # Tên cơ sở dữ liệu
         POSTGRES_USER: user # Tên người dùng
         POSTGRES_PASSWORD: password # Mật khẩu
         # PGDATA không cần thiết nếu bạn mount volume vào /var/lib/postgresql/data (thư mục mặc định của Postgres)
      ports:
         - "5432:5432" # Ánh xạ cổng 5432 của container ra cổng 5432 của host
      volumes:
         # Mount volume dữ liệu vào thư mục mặc định của PostgreSQL
         - ecommerce_db_data:/var/lib/postgresql/data
         # Correct path for pg_hba.conf in postgres:alpine images is usually inside PGDATA
         # Đường dẫn đúng cho pg_hba.conf trong image postgres:alpine thường nằm trong thư mục PGDATA
         - ./docker/postgres/core_db/pg_hba.conf:/etc/postgresql/pg_hba.conf
      healthcheck: # Kiểm tra sức khỏe của DB
         test: ["CMD-SHELL", "pg_isready -U user -d ecommerce_core_db"]
         interval: 5s
         timeout: 5s
         retries: 5
      restart: always # Luôn khởi động lại container nếu có sự cố
      # Thêm dòng command này để buộc Postgres sử dụng mã hóa mật khẩu MD5
      # Điều này giải quyết vấn đề khi mật khẩu mặc định được lưu dưới dạng SCRAM

   # Dịch vụ Redis cho Cart Service và Auth Service (Refresh Tokens)
   redis:
      image: redis:7-alpine # Sử dụng image Redis phiên bản 7 (phiên bản alpine nhỏ gọn)
      container_name: ecommerce_redis # Tên container
      ports:
         - "6379:6379" # Ánh xạ cổng 6379 của container ra cổng 6379 của host
      volumes:
         - redis_data:/data # Lưu trữ dữ liệu vào volume (đây là đường dẫn mặc định của Redis)
      healthcheck: # Kiểm tra sức khỏe của Redis
         test: ["CMD", "redis-cli", "ping"]
         interval: 5s
         timeout: 5s
         retries: 5
      restart: always # Luôn khởi động lại container nếu có sự cố

   # Dịch vụ Elasticsearch cho Search Service
   elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0 # Sử dụng phiên bản Elasticsearch 8.14.0
      container_name: ecommerce_elasticsearch
      environment:
         - xpack.security.enabled=false # Tắt bảo mật X-Pack (KHÔNG DÙNG TRONG PRODUCTION)
         - discovery.type=single-node # Chạy ở chế độ một node (dev/test)
         - ES_JAVA_OPTS=-Xms512m -Xmx512m # Cấu hình bộ nhớ Java (điều chỉnh nếu cần)
      ports:
         - "9200:9200" # Cổng HTTP
         - "9300:9300" # Cổng Transport (nội bộ, cho client Java/Node.js)
      volumes:
         - es_data:/usr/share/elasticsearch/data # Volume dữ liệu Elasticsearch
      healthcheck:
         test: ["CMD-SHELL", "curl -f http://localhost:9200"] # Kiểm tra cổng HTTP
         interval: 10s
         timeout: 10s
         retries: 5
      restart: always

volumes:
   ecommerce_db_data: # Định nghĩa volume để lưu trữ dữ liệu bền vững cho PostgreSQL
   redis_data: # Định nghĩa volume mới cho Redis
   es_data: # Định nghĩa volume mới cho Elasticsearch
